(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{194:function(t,e,a){"use strict";a.r(e);var s=a(0),r=Object(s.a)({},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"content"},[t._m(0),t._v(" "),a("p",[t._v("在使用 react 的过程中，我们绕不开渲染性能优化问题，因为默认情况下 react 组件的 shouldComponentUpdate 函数会一直返回 true，这回导致所有的组件都会进行耗时的虚拟 DOM 比较。在使用 redux 作为 react 的逻辑层框架时，我们可以使用经典的 PureComponent+ShallowCompare 的方式进行渲染性能优化")]),t._v(" "),a("p",[t._v("https://foio.github.io/mobx-react/")]),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12),t._v(" "),t._m(13),t._m(14),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),t._m(17),t._v(" "),t._m(18),t._v(" "),t._m(19),t._v(" "),t._m(20),t._v(" "),a("p",[t._v("作为一个数据层框架，mobx 基于一个最简单的原则：")]),t._v(" "),t._m(21),t._v(" "),a("p",[t._v("在使用 mobx 作为 react 的 store 时，我们该如何进行渲染性能优化呢？\n通过分析源代码发现，在使用@observer 将 react 组件转换成一个监听者(Reactions)后，mobx 会为 react 组件提供一个精确的、细粒度的 shouldComponentUpdate 函数:")]),t._v(" "),t._m(22),a("p",[t._v("借助于 mobx 框架对 Observable 变量引用的跟踪和依赖收集，mobx 能够精确地得到 react 组件对 Observable 变量的依赖图谱，然后再用经典的 ShallowCompare 实现细粒度的 shouldComponentUpdate 函数，以达到 100%无浪费 render。这一切都是自动完成地，fantastic！使用 mobx 后，我们再也无需手动写 shouldComponentUpdate 函数了。")]),t._v(" "),t._m(23),t._v(" "),t._m(24),t._v(" "),t._m(25),t._v(" "),t._m(26),t._v(" "),t._m(27),t._m(28),t._v(" "),t._m(29),t._m(30),t._v(" "),t._m(31),t._v(" "),t._m(32),t._v(" "),a("p",[a("a",{attrs:{href:"https://reactnative.cn/docs/getting-started.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考 React Native 搭建开发环境链接"),a("OutboundLink")],1)]),t._v(" "),t._m(33),t._v(" "),t._m(34),t._v(" "),t._m(35),t._v(" "),t._m(36),t._v(" "),t._m(37),t._v(" "),t._m(38),t._v(" "),t._m(39),t._v(" "),t._m(40),t._v(" "),a("p",[t._v("React 中最值得称道的部分莫过于 Virtual DOM 与 diff 的完美结合，特别是其高效的 diff 算法，让用户可以无需顾忌性能问题而”任性自由”的刷新页面，让开发者也可以无需关心 Virtual DOM 背后的运作原理，因为 React diff 会帮助我们计算出 Virtual DOM 中真正变化的部分，并只针对该部分进行实际 DOM 操作，而非重新渲染整个页面，从而保证了每次操作更新后页面的高效渲染，因此 Virtual DOM 与 diff 是保证 React 性能口碑的幕后推手。")]),t._v(" "),t._m(41),t._v(" "),a("p",[t._v("计算一棵树形结构转换成另一棵树形结构的最少操作，是一个复杂且值得研究的问题。传统 diff 算法通过循环递归对节点进行依次对比，效率低下，算法复杂度达到 O(n^3)，其中 n 是树中节点的总数。O(n^3) 到底有多可怕，这意味着如果要展示1000个节点，就要依次执行上十亿次的比较。这种指数型的性能消耗对于前端渲染场景来说代价太高了！现今的 CPU 每秒钟能执行大约30亿条指令，即便是最高效的实现，也不可能在一秒内计算出差异情况。")]),t._v(" "),a("p",[t._v("如果 React 只是单纯的引入 diff 算法而没有任何的优化改进，那么其效率是远远无法满足前端渲染所要求的性能。")]),t._v(" "),a("p",[t._v("因此，想要将 diff 思想引入 Virtual DOM，就需要设计一种稳定高效的 diff 算法，而 React 做到了！")]),t._v(" "),a("p",[t._v("那么，React diff 到底是如何实现的呢？")]),t._v(" "),t._m(42),t._v(" "),t._m(43),t._v(" "),t._m(44),t._v(" "),t._m(45),t._v(" "),t._m(46),t._v(" "),t._m(47),t._v(" "),t._m(48),t._v(" "),t._m(49),t._v(" "),t._m(50),t._v(" "),a("p",[t._v("拥有相同类的两个组件 生成相似的树形结构，\n拥有不同类的两个组件 生成不同的树形结构。")]),t._v(" "),t._m(51),t._v(" "),t._m(52),t._v(" "),t._m(53),t._v(" "),t._m(54),t._v(" "),t._m(55),t._v(" "),a("hr"),t._v(" "),t._m(56),t._v(" "),t._m(57),t._v(" "),t._m(58),t._v(" "),t._m(59),t._v(" "),t._m(60),t._v(" "),t._m(61),t._v(" "),t._m(62),t._v(" "),t._m(63),t._v(" "),t._m(64),t._v(" "),t._m(65),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/hujiulong/simple-react/blob/master/src/react-dom/diff.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("学习链接"),a("OutboundLink")],1)]),t._v(" "),t._m(66),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/semlinker/reactjs-interview-questions",target:"_blank",rel:"noopener noreferrer"}},[t._v("reactjs-interview-questions"),a("OutboundLink")],1)])])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"react"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#react","aria-hidden":"true"}},[this._v("#")]),this._v(" React")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"学习重点划分"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#学习重点划分","aria-hidden":"true"}},[this._v("#")]),this._v(" 学习重点划分")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"jsx是什么"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jsx是什么","aria-hidden":"true"}},[this._v("#")]),this._v(" jsx是什么?")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("React 使用 JSX 来替代常规的 JavaScript")]),this._v(" "),e("li",[this._v("JSX 是一个看起来很像 XML 的 JavaScript 语法扩展")]),this._v(" "),e("li",[this._v("我们不需要一定使用 JSX，但它有以下优点")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[e("blockquote",[e("p",[this._v("JSX 执行更快，因为它在编译为 JavaScript 代码后进行了优化")])])]),this._v(" "),e("li",[e("blockquote",[e("p",[this._v("它是类型安全的，在编译过程中就能发现错误")])])]),this._v(" "),e("li",[e("blockquote",[e("p",[this._v("使用 JSX 编写模板更加简单快速")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"mvvm是什么？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mvvm是什么？","aria-hidden":"true"}},[this._v("#")]),this._v(" MVVM是什么？")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[this._v("MVVM是Model-View-ViewModel的简写")]),this._v(" "),e("li",[this._v("它本质上是MVC 的改进版")]),this._v(" "),e("li",[this._v("MVVM（Model-View-ViewModel）框架的由来是MVP（Model-View-Presenter）模式与WPF结合的应用方式时发展演变过来的一种新型架构框架")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"mvvm优点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mvvm优点","aria-hidden":"true"}},[this._v("#")]),this._v(" MVVM优点")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[e("blockquote",[e("p",[this._v("MVVM模式和MVC模式一样，主要目的是分离视图（View）和模型（Model），有几大优点")])])])])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ol",[a("li",[a("strong",[t._v("低耦合")]),t._v('：视图（View）可以独立于Model变化和修改，一个ViewModel可以绑定到不同的"View"上，当View变化的时候Model可以不变，当Model变化的时候View也可以不变')]),t._v(" "),a("li",[a("strong",[t._v("可重用性")]),t._v("：你可以把一些视图逻辑放在一个ViewModel里面，让很多view重用这段视图逻辑")]),t._v(" "),a("li",[a("strong",[t._v("独立开发")]),t._v("：开发人员可以专注于业务逻辑和数据的开发（ViewModel），设计人员可以专注于页面设计，使用Expression Blend可以很容易设计界面并生成xml代码")]),t._v(" "),a("li",[a("strong",[t._v("可测试")]),t._v("：界面素来是比较难于测试的，而现在测试可以针对ViewModel来写")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"props"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#props","aria-hidden":"true"}},[this._v("#")]),this._v(" Props")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ul",[a("li",[a("blockquote",[a("p",[t._v("和props相关")])]),t._v(" "),a("ul",[a("li",[t._v("只读，不准修改")]),t._v(" "),a("li",[t._v("componentWillReceiveProps  / 生命周期")]),t._v(" "),a("li",[t._v("propTypes")]),t._v(" "),a("li",[t._v("defaultProps")]),t._v(" "),a("li",[t._v("children")])])]),t._v(" "),a("li",[a("blockquote",[a("p",[t._v("类型检查")])])]),t._v(" "),a("li",[a("blockquote",[a("p",[t._v("默认值")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"react生命周期"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#react生命周期","aria-hidden":"true"}},[this._v("#")]),this._v(" React生命周期")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("实例化阶段\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("、componentDidMount")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 组件挂载完成之后触发的生命周期 相当于vue的mounted")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("、componentWillMount")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 组件挂载之前 相当于vue的beforeMount")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("更新阶段")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("存在期"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("、componentWillReceiveProps")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nextProps"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 组件将要接收新的props vue没有")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("、shouldComponentUpdate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nextProps"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("nextState"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 通过返回值判断组件是否需要更新,用于react优化，vue没有 true更新，false不更新")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("、componentWillUpdate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 组件将要更新 相当于vue的beforeUpdate")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("、render")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("、componentDidUpdate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 组件更新完成 相当于vue的updated")]),t._v("\n销毁"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("清理期\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("、componentWillUnmount")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 组件将要卸载")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v("、方法"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("unmountComponentAtNode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// eg: ReactDom.unmountComponentAtNode(document.getElementById('root'))")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"react组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#react组件","aria-hidden":"true"}},[this._v("#")]),this._v(" React组件")])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("ul",[e("li",[this._v("无状态组件(视图组件)")]),this._v(" "),e("li",[this._v("class 继承 （容器组件）")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"redux"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#redux","aria-hidden":"true"}},[this._v("#")]),this._v(" Redux")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"redux中间件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#redux中间件","aria-hidden":"true"}},[this._v("#")]),this._v(" Redux中间件")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"组件通信"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#组件通信","aria-hidden":"true"}},[this._v("#")]),this._v(" 组件通信")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"高阶组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#高阶组件","aria-hidden":"true"}},[this._v("#")]),this._v(" 高阶组件")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"mobx"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mobx","aria-hidden":"true"}},[this._v("#")]),this._v(" mobx")])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("当应用状态更新时，所有依赖于这些应用状态的监听者（包括 UI、服务端数据同步函数等），都应该自动得到细粒度地更新。")])])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("shouldComponentUpdate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("nextProps"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" nextState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// update on any state changes (as is the default)")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" nextState"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// update if props are shallowly not equal")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isObjectShallowModified")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("props"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" nextProps"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"知识拓展"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#知识拓展","aria-hidden":"true"}},[this._v("#")]),this._v(" 知识拓展")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"react-native"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#react-native","aria-hidden":"true"}},[this._v("#")]),this._v(" React Native")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装","aria-hidden":"true"}},[this._v("#")]),this._v(" 安装")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h5",{attrs:{id:"_1-安装镜像源-yarn、react-native-的命令行工具（react-native-cli）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-安装镜像源-yarn、react-native-的命令行工具（react-native-cli）","aria-hidden":"true"}},[this._v("#")]),this._v(" 1. 安装镜像源, Yarn、React Native 的命令行工具（react-native-cli）")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("npm config "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" registry https"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("registry"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("npm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("taobao"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("org "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("global\nnpm config "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" disturl https"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("npm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("taobao"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("org"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("dist "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("global\n\nnpm install "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("g yarn react"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("native"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("cli\n\nyarn config "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" registry https"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("registry"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("npm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("taobao"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("org "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("global\nyarn config "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" disturl https"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("npm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("taobao"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("org"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("dist "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("global\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h5",{attrs:{id:"_2-安装-android-studio"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-安装-android-studio","aria-hidden":"true"}},[this._v("#")]),this._v(" 2. 安装 Android Studio")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-html extra-class"},[e("pre",{pre:!0,attrs:{class:"language-html"}},[e("code",[this._v(" 一直 next ~\n 安装路径: C:\\Program Files\\Android\n 下载路径: C:\\Users\\guhuilin1\\AppData\\Local\\Android\\Sdk\n\n安装 SDK Menger\n  Appearance & Behavior → System Settings → Android SDK\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h5",{attrs:{id:"_3-配置-android-home-环境变量"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-配置-android-home-环境变量","aria-hidden":"true"}},[this._v("#")]),this._v(" 3. 配置 ANDROID_HOME 环境变量")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h5",{attrs:{id:"_4-把-platform-tools-目录添加到环境变量-path-中"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-把-platform-tools-目录添加到环境变量-path-中","aria-hidden":"true"}},[this._v("#")]),this._v(" 4. 把 platform-tools 目录添加到环境变量 Path 中")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h5",{attrs:{id:"_5-创建项目"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-创建项目","aria-hidden":"true"}},[this._v("#")]),this._v(" 5. 创建项目")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"优势"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#优势","aria-hidden":"true"}},[this._v("#")]),this._v(" 优势")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ul",[a("li",[t._v("跨平台 （只有 0.2% 的平台特定代码）")]),t._v(" "),a("li",[t._v("统一的设计语言，同时还能为不同平台提供不同设计")]),t._v(" "),a("li",[t._v("React 的 scale 很好。组件化，简单的生命周期,声明式")]),t._v(" "),a("li",[t._v("迭代速度快（主要是 hot reloading 很快）")]),t._v(" "),a("li",[t._v("大量基础设施的投入值得（网络、国际化、复杂动画、设备信息、用户信息等等都是通过一- 个桥把原生 api 暴露给 RN 的。）")]),t._v(" "),a("li",[t._v("同时他们在这里也指出：他们并不相信在一个已有 app 上集成 RN 是一件简单事儿，必须- 要大量且持续地投入基础设施才行（说好的「满意的地方」呢）")]),t._v(" "),a("li",[t._v("性能 （尽管大家都担心但是其实基本没有问题）")]),t._v(" "),a("li",[t._v("不过首次渲染比较慢，导致不适合用作启动屏、deeplink，也增加了可交互时间（TTI），另外掉帧不好 debug（说好的「满意的地方」呢）")]),t._v(" "),a("li",[t._v("Redux（好用，虽然废话太多）")]),t._v(" "),a("li",[t._v("背后是原生，一些曾经不确定能不能做的功能（Shared element transitions、动画库 Lottie、网络层、核心基础设施）发现都能做")]),t._v(" "),a("li",[t._v("静态分析（eslint，prettier，一些性能检测）")]),t._v(" "),a("li",[t._v("动画")]),t._v(" "),a("li",[t._v("JS/React 的开源生态")]),t._v(" "),a("li",[t._v("Flexbox")]),t._v(" "),a("li",[t._v("有时候可以加上 Web 跨三端")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"劣势"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#劣势","aria-hidden":"true"}},[this._v("#")]),this._v(" 劣势")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ul",[a("li",[t._v("论成熟度，稳定性，RN 比 不上 iOS 和 Android 原生。")]),t._v(" "),a("li",[t._v("由于 RN 的 Bug，有时我们必须维护自己的一个 RN 分支。")]),t._v(" "),a("li",[t._v("JS 缺少类型系统，Flow 太严格，TS 集成到已有项目也还有问题。")]),t._v(" "),a("li",[t._v("不好重构（JS 没有类型无法静态分析，重构引起的错误不能在编译时被捕捉到）")]),t._v(" "),a("li",[t._v("JavaScriptCore 不一致性，更糟糕的是，现在都 8102 年了，RN （Android）带的还是不支持 ES 6 的 JSC")]),t._v(" "),a("li",[t._v("RN 开源库质量参差不齐。比如在 iOS 上正常的库在 Android 上可能有意想不到的错误（因为为作者也许只熟悉 iOS 和 RN,并不熟悉 Android）\n有时不得不白手起家，因为很多的基础框架中的库还没有 的 RN 封装。")]),t._v(" "),a("li",[t._v("崩溃监控库在 RN 上表现不是特别特定业。内没方案，只能自己搞。")]),t._v(" "),a("li",[t._v("Native Bridge 的由于 JS 的弱类型造成 Native 与 JS 通信 中类型的不匹配，容易造成错误。")]),t._v(" "),a("li",[t._v("启动时间，RN 框架初始化需要几秒，即使是在高端机器上。")]),t._v(" "),a("li",[t._v("新开页面的渲染时间，0.4 秒左右页面第一次渲染费时。")]),t._v(" "),a("li",[t._v("APP 大小。至少增加 12M。")]),t._v(" "),a("li",[t._v("直到目前都无法在 Android 上支持 64 位。")]),t._v(" "),a("li",[t._v("手势，iOS 和 Android 的手势 API 差距很大，不过喜闻 react-native-gesture-handler 发布了 1.0 版本。")]),t._v(" "),a("li",[t._v("长列表，虽然 RN 团队很努力了，但是由于 RN 的异步通信机制，长列表的流畅渲染，目前依然无解。")]),t._v(" "),a("li",[t._v("React Native 升级是个坑。")]),t._v(" "),a("li",[t._v("RN 中的 Accessibility 就是个大坑。")]),t._v(" "),a("li",[t._v("还有一些奇怪的 Bug，暂没有修复。")]),t._v(" "),a("li",[t._v("SavedInstanceState 在 Android 上跨进程的坑。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"不是技术问题的问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#不是技术问题的问题","aria-hidden":"true"}},[this._v("#")]),this._v(" 不是技术问题的问题")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("要用好 RN 你必须同时熟悉 iOS 和 Android ，当然还有 RN 本身，这就对我们工程师提出了更多挑战。")]),this._v(" "),e("li",[this._v("团队的管理，责任的划分。")]),this._v(" "),e("li",[this._v("RN 文档及相关资源不如 iOS 和 Android 的丰富。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"react中的-dom-diff"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#react中的-dom-diff","aria-hidden":"true"}},[this._v("#")]),this._v(" React中的 DOM diff")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("前言")]),this._v(" "),e("p",[this._v("React diff 作为 Virtual DOM 的加速器，其算法上的改进优化是 React 整个界面渲染的基础，以及性能提高的保障")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"传统-diff-算法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#传统-diff-算法","aria-hidden":"true"}},[this._v("#")]),this._v(" 传统 diff 算法")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"react-diff-策略"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#react-diff-策略","aria-hidden":"true"}},[this._v("#")]),this._v(" React diff 策略")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("b",[this._v("React 通过制定大胆的策略，将 O(n^3) 复杂度的问题转换成 O(n) 复杂度的问题。")]),e("br")])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("（1）什么是调和？")]),this._v(" "),e("blockquote",[e("p",[this._v("将Virtual DOM树转换成actual DOM树的最少操作的过程 称为 调和 。")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("tip（2）什么是React diff算法？")]),this._v(" "),e("blockquote",[e("p",[this._v("diff算法是调和的具体实现。")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"策略一（tree-diff）："}},[e("a",{staticClass:"header-anchor",attrs:{href:"#策略一（tree-diff）：","aria-hidden":"true"}},[this._v("#")]),this._v(" 策略一（tree diff）：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("Web UI中DOM节点跨层级的移动操作特别少，可以忽略不计。")]),this._v(" "),e("br"),this._v("\n（1）React通过updateDepth对Virtual DOM树进行层级控制。"),e("br"),this._v("\n（2）对树分层比较，两棵树 只对同一层次节点 进行比较。如果该节点不存在时，则该节点及其子节点会被完全删除，不会再进一步比较。"),e("br"),this._v("\n（3）只需遍历一次，就能完成整棵DOM树的比较。"),e("br"),this._v(" "),e("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/5518628-d60043dbeddfce8b.png",alt:"Image"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h6",{attrs:{id:"那么问题来了，如果dom节点出现了跨层级操作-diff会咋办呢？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#那么问题来了，如果dom节点出现了跨层级操作-diff会咋办呢？","aria-hidden":"true"}},[this._v("#")]),this._v(" 那么问题来了，如果DOM节点出现了跨层级操作,diff会咋办呢？")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("答：diff只简单考虑同层级的节点位置变换，如果是跨层级的话，只有创建节点和删除节点的操作。\n"),e("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/5518628-41118df156ed8d6e.png",alt:"Image"}}),this._v("\n如上图所示，以A为根节点的整棵树会被重新创建，而不是移动，因此 官方建议不要进行DOM节点跨层级操作，可以通过CSS隐藏、显示节点，而不是真正地移除、添加DOM节点。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"策略二（component-diff）："}},[e("a",{staticClass:"header-anchor",attrs:{href:"#策略二（component-diff）：","aria-hidden":"true"}},[this._v("#")]),this._v(" 策略二（component diff）：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h6",{attrs:{id:"react对不同的组件间的比较，有三种策略"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#react对不同的组件间的比较，有三种策略","aria-hidden":"true"}},[this._v("#")]),this._v(" React对不同的组件间的比较，有三种策略")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("（1）同一类型的两个组件，按原策略（层级比较）继续比较Virtual DOM树即可。")]),this._v(" "),e("li",[this._v("（2）同一类型的两个组件，组件A变化为组件B时，可能Virtual DOM没有任何变化，如果知道这点（变换的过程中，Virtual DOM没有改变），可节省大量计算时间，所以 用户 可以通过 shouldComponentUpdate() 来判断是否需要 判断计算。")]),this._v(" "),e("li",[this._v("（3）不同类型的组件，将一个（将被改变的）组件判断为dirty component（脏组件），从而替换 整个组件的所有节点。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("注意：如果组件D和组件G的结构相似，但是 React判断是 不同类型的组件，则不会比较其结构，而是删除 组件D及其子节点，创建组件G及其子节点。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"策略三（element-diff）："}},[e("a",{staticClass:"header-anchor",attrs:{href:"#策略三（element-diff）：","aria-hidden":"true"}},[this._v("#")]),this._v(" 策略三（element diff）：")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("p",[t._v("对于同一层级的一组子节点，通过唯一id区分。\n当节点处于同一层级时，diff提供三种节点操作：删除、插入、移动。 "),a("br"),t._v(" "),a("b",[t._v("插入")]),t._v("：组件 C 不在集合（A,B）中，需要插入  "),a("br"),t._v(" "),a("b",[t._v("删除")]),t._v("：（1）组件 D 在集合（A,B,D）中，但 D的节点已经更改，不能复用和更新，所以需要删除 旧的 D ，再创建新的。"),a("br"),t._v("\n（2）组件 D 之前在 集合（A,B,D）中，但集合变成新的集合（A,B）了，D 就需要被删除。"),a("br"),t._v(" "),a("b",[t._v("移动")]),t._v("：组件D已经在集合（A,B,C,D）里了，且集合更新时，D没有发生更新，只是位置改变，如新集合（A,D,B,C），D在第二个，无须像传统diff，让旧集合的第二个B和新集合的第二个D 比较，并且删除第二个位置的B，再在第二个位置插入D，而是 "),a("strong",[t._v("（对同一层级的同组子节点） 添加唯一key进行区分，移动即可")]),t._v("。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"重点说下移动的逻辑："}},[e("a",{staticClass:"header-anchor",attrs:{href:"#重点说下移动的逻辑：","aria-hidden":"true"}},[this._v("#")]),this._v(" 重点说下移动的逻辑：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"情形一：新旧集合中存在相同节点但位置不同时，如何移动节点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#情形一：新旧集合中存在相同节点但位置不同时，如何移动节点","aria-hidden":"true"}},[this._v("#")]),this._v(" 情形一：新旧集合中存在相同节点但位置不同时，如何移动节点")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/5518628-89bb3cd6ebdb4296.png",alt:"Image"}})])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ul",[a("li",[t._v("（1）看着上图的 B，React先从新中取得B，然后判断旧中是否存在相同节点B，当发现存在节点B后，就去判断是否移动B。\nB在旧 中的index=1，它的lastIndex=0，"),a("strong",[t._v("不满足 index < lastIndex 的条件，因此 B 不做移动操作。此时，一个操作是，lastIndex=(index,lastIndex)中的较大数=1")]),t._v(".\n"),a("strong",[t._v("注意：lastIndex有点像浮标，或者说是一个map的索引，一开始默认值是0，它会与map中的元素进行比较，比较完后，会改变自己的值的（取index和lastIndex的较大数）")]),t._v("。"),a("br")]),t._v(" "),a("li",[t._v("（2）看着 A，A在旧的index=0，此时的lastIndex=1（因为先前与新的B比较过了），"),a("strong",[t._v("满足index<lastIndex")]),t._v("，因此，对A进行移动操作，此时"),a("strong",[t._v("lastIndex=max(index,lastIndex)=1")]),t._v("。")]),t._v(" "),a("li",[t._v("（3）看着D，同（1），不移动，由于D在旧的index=3，比较时，lastIndex=1，所以改变lastIndex=max(index,lastIndex)=3  "),a("br")]),t._v(" "),a("li",[t._v("（4）看着C，同（2），移动，C在旧的index=2，满足index<lastIndex（lastIndex=3），所以移动。 "),a("br"),t._v(" "),a("strong",[t._v("由于C已经是最后一个节点，所以diff操作结束")]),t._v("。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"情形二：新集合中有新加入的节点，旧集合中有删除的节点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#情形二：新集合中有新加入的节点，旧集合中有删除的节点","aria-hidden":"true"}},[this._v("#")]),this._v(" 情形二：新集合中有新加入的节点，旧集合中有删除的节点")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/5518628-eb7ef5477ea1a678.png",alt:"Image"}})])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ul",[a("li",[t._v("（1）B不移动，不赘述，更新l astIndex=1")]),t._v(" "),a("li",[t._v("（2）新集合取得 E，发现旧不存在，故在"),a("strong",[t._v("lastIndex=1的位置 创建E")]),t._v("，更新lastIndex=1")]),t._v(" "),a("li",[t._v("（3）新集合取得C，C不移动，更新lastIndex=2")]),t._v(" "),a("li",[t._v("（4）新集合取得A，A移动，同上，更新lastIndex=2")]),t._v(" "),a("li",[t._v("（5）"),a("strong",[t._v("新集合对比后，再对旧集合遍历。判断 新集合 没有，但 旧集合 有的元素（如D，新集合没有，旧集合有）")]),t._v("，发现 D，删除D，diff操作结束。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"diff的不足与待优化的地方"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#diff的不足与待优化的地方","aria-hidden":"true"}},[this._v("#")]),this._v(" diff的不足与待优化的地方")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/5518628-aea2bb7e8e843db6.png",alt:"Image"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("看图的 D，此时D不移动，但它的index是最大的，导致更新lastIndex=3，从而使得其他元素A,B,C的index<lastIndex，导致A,B,C都要去移动。"),e("br"),this._v(" "),e("strong",[this._v("理想情况是只移动D，不移动A,B,C。因此，在开发过程中，尽量减少类似将最后一个节点移动到列表首部的操作，当节点数量过大或更新操作过于频繁时，会影响React的渲染性能")]),this._v("。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"学习链接"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#学习链接","aria-hidden":"true"}},[this._v("#")]),this._v(" 学习链接")])}],!1,null,null,null);e.default=r.exports}}]);