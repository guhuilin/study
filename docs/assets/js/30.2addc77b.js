(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{199:function(t,e,s){"use strict";s.r(e);var a=s(0),n=Object(a.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[t._m(0),t._v(" "),s("p",[t._v("在使用 react 的过程中，我们绕不开渲染性能优化问题，因为默认情况下 react 组件的 shouldComponentUpdate 函数会一直返回 true，这回导致所有的组件都会进行耗时的虚拟 DOM 比较。在使用 redux 作为 react 的逻辑层框架时，我们可以使用经典的 PureComponent+ShallowCompare 的方式进行渲染性能优化")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://foio.github.io/mobx-react/",target:"_blank",rel:"noopener noreferrer"}},[t._v("mobx链接"),s("OutboundLink")],1)]),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12),t._m(13),t._v(" "),t._m(14),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),t._m(17),t._v(" "),t._m(18),t._v(" "),t._m(19),t._v(" "),s("p",[t._v("作为一个数据层框架，mobx 基于一个最简单的原则：")]),t._v(" "),t._m(20),t._v(" "),s("p",[t._v("在使用 mobx 作为 react 的 store 时，我们该如何进行渲染性能优化呢？\n通过分析源代码发现，在使用@observer 将 react 组件转换成一个监听者(Reactions)后，mobx 会为 react 组件提供一个精确的、细粒度的 shouldComponentUpdate 函数:")]),t._v(" "),t._m(21),s("p",[t._v("借助于 mobx 框架对 Observable 变量引用的跟踪和依赖收集，mobx 能够精确地得到 react 组件对 Observable 变量的依赖图谱，然后再用经典的 ShallowCompare 实现细粒度的 shouldComponentUpdate 函数，以达到 100%无浪费 render。这一切都是自动完成地，fantastic！使用 mobx 后，我们再也无需手动写 shouldComponentUpdate 函数了。")]),t._v(" "),t._m(22),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/semlinker/reactjs-interview-questions",target:"_blank",rel:"noopener noreferrer"}},[t._v("reactjs-interview-questions"),s("OutboundLink")],1)])])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"react"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#react","aria-hidden":"true"}},[this._v("#")]),this._v(" React")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"jsx是什么"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jsx是什么","aria-hidden":"true"}},[this._v("#")]),this._v(" jsx是什么?")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("React 使用 JSX 来替代常规的 JavaScript")]),this._v(" "),e("li",[this._v("JSX 是一个看起来很像 XML 的 JavaScript 语法扩展")]),this._v(" "),e("li",[this._v("我们不需要一定使用 JSX，但它有以下优点")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[e("blockquote",[e("p",[this._v("JSX 执行更快，因为它在编译为 JavaScript 代码后进行了优化")])])]),this._v(" "),e("li",[e("blockquote",[e("p",[this._v("它是类型安全的，在编译过程中就能发现错误")])])]),this._v(" "),e("li",[e("blockquote",[e("p",[this._v("使用 JSX 编写模板更加简单快速")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"mvvm是什么？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mvvm是什么？","aria-hidden":"true"}},[this._v("#")]),this._v(" MVVM是什么？")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[this._v("MVVM是Model-View-ViewModel的简写")]),this._v(" "),e("li",[this._v("它本质上是MVC 的改进版")]),this._v(" "),e("li",[this._v("MVVM（Model-View-ViewModel）框架的由来是MVP（Model-View-Presenter）模式与WPF结合的应用方式时发展演变过来的一种新型架构框架")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"mvvm优点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mvvm优点","aria-hidden":"true"}},[this._v("#")]),this._v(" MVVM优点")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[e("blockquote",[e("p",[this._v("MVVM模式和MVC模式一样，主要目的是分离视图（View）和模型（Model），有几大优点")])])])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ol",[s("li",[s("strong",[t._v("低耦合")]),t._v('：视图（View）可以独立于Model变化和修改，一个ViewModel可以绑定到不同的"View"上，当View变化的时候Model可以不变，当Model变化的时候View也可以不变')]),t._v(" "),s("li",[s("strong",[t._v("可重用性")]),t._v("：你可以把一些视图逻辑放在一个ViewModel里面，让很多view重用这段视图逻辑")]),t._v(" "),s("li",[s("strong",[t._v("独立开发")]),t._v("：开发人员可以专注于业务逻辑和数据的开发（ViewModel），设计人员可以专注于页面设计，使用Expression Blend可以很容易设计界面并生成xml代码")]),t._v(" "),s("li",[s("strong",[t._v("可测试")]),t._v("：界面素来是比较难于测试的，而现在测试可以针对ViewModel来写")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"props"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#props","aria-hidden":"true"}},[this._v("#")]),this._v(" Props")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[s("blockquote",[s("p",[t._v("和props相关")])]),t._v(" "),s("ul",[s("li",[t._v("只读，不准修改")]),t._v(" "),s("li",[t._v("componentWillReceiveProps  / 生命周期")]),t._v(" "),s("li",[t._v("propTypes")]),t._v(" "),s("li",[t._v("defaultProps")]),t._v(" "),s("li",[t._v("children")])])]),t._v(" "),s("li",[s("blockquote",[s("p",[t._v("类型检查")])])]),t._v(" "),s("li",[s("blockquote",[s("p",[t._v("默认值")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"react生命周期"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#react生命周期","aria-hidden":"true"}},[this._v("#")]),this._v(" React生命周期")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("实例化阶段\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("、componentDidMount")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 组件挂载完成之后触发的生命周期 相当于vue的mounted")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("、componentWillMount")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 组件挂载之前 相当于vue的beforeMount")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("更新阶段")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("存在期"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("、componentWillReceiveProps")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nextProps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 组件将要接收新的props vue没有")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("、shouldComponentUpdate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nextProps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("nextState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 通过返回值判断组件是否需要更新,用于react优化，vue没有 true更新，false不更新")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("、componentWillUpdate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 组件将要更新 相当于vue的beforeUpdate")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("、render")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("、componentDidUpdate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 组件更新完成 相当于vue的updated")]),t._v("\n销毁"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("清理期\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("、componentWillUnmount")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 组件将要卸载")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v("、方法"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("unmountComponentAtNode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// eg: ReactDom.unmountComponentAtNode(document.getElementById('root'))")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"react组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#react组件","aria-hidden":"true"}},[this._v("#")]),this._v(" React组件")])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("ul",[e("li",[this._v("无状态组件(视图组件)")]),this._v(" "),e("li",[this._v("class 继承 （容器组件）")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"redux"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#redux","aria-hidden":"true"}},[this._v("#")]),this._v(" Redux")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"redux中间件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#redux中间件","aria-hidden":"true"}},[this._v("#")]),this._v(" Redux中间件")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"组件通信"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#组件通信","aria-hidden":"true"}},[this._v("#")]),this._v(" 组件通信")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"高阶组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#高阶组件","aria-hidden":"true"}},[this._v("#")]),this._v(" 高阶组件")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"mobx"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mobx","aria-hidden":"true"}},[this._v("#")]),this._v(" mobx")])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("当应用状态更新时，所有依赖于这些应用状态的监听者（包括 UI、服务端数据同步函数等），都应该自动得到细粒度地更新。")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("shouldComponentUpdate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("nextProps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" nextState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// update on any state changes (as is the default)")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" nextState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// update if props are shallowly not equal")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isObjectShallowModified")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("props"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" nextProps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"学习链接"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#学习链接","aria-hidden":"true"}},[this._v("#")]),this._v(" 学习链接")])}],!1,null,null,null);e.default=n.exports}}]);